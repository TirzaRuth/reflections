When would you want to use a remote repository rather than keeping all your work
local?

    You might do this in order to share your code base with other people or to build a large project where several people are working 
    on different components

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    This is because you might be working on changes locally on the working directory and if someone else makes a change on the Github file, if the remote repository
    is automatically updating the Git repository, your local changes could be overrode. 

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks are used when you want to clone a repository on Github to your own repository directory. It is essentialy a clone operation but used within Github.
    Clone is when you want to copy over the repository on Github to your local machine or copy items from one repository to another within your local machine. 
    Branch is used when you want to make modifications to the main repository but do not want to commit it yet to the master branch. 

What is the benefit of having a copy of the last known state of the remote
stored locally?

    You can be up-to-date with any collaborations done on the remote while you are offline. 

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    You could collaborate on google docs, or subversion if you needed to collaborate on coding projects. Git seems easier than SVN. 

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    If you are modifying code and need feedback on the changed code before merging, this would be a good reason to use a separate branch.
